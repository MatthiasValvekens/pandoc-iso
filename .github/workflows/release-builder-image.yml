name: Publish container image
on:
  workflow_dispatch: {}
jobs:
  build-image:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.0.3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Generate container metadata
        id: docker-meta
        uses: docker/metadata-action@v4.4.0
        with:
          images: |
            mfjval/pandoc-iso
            ghcr.io/matthiasvalvekens/pandoc-iso
          tags: |
            type=raw,value=latest
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: mfjval
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: build-push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
          cache-to: type=gha,mode=max
          cache-from: type=gha
      - name: Generate cosign arguments
        id: cosign-args
        # TODO make this more DRY
        run: |
          echo -n "to-sign=" >> "$GITHUB_OUTPUT"
          echo -n "ghcr.io/matthiasvalvekens/pandoc-iso@$DIGEST" >> "$GITHUB_OUTPUT"
          echo -n " mfjval/pandoc-iso@$DIGEST" >> "$GITHUB_OUTPUT"
          echo "" >> "$GITHUB_OUTPUT"
          cat "$GITHUB_OUTPUT"
        env:
          DIGEST: ${{ steps.build-push.outputs.digest }}
      - name: Sign images using GHA OIDC identity
        run: cosign sign --yes ${{ steps.cosign-args.outputs.to-sign }}
